<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>字符集 on</title><link>https://guanpj.github.io/amethyst/tags/%E5%AD%97%E7%AC%A6%E9%9B%86/</link><description>Recent content in 字符集 on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://guanpj.github.io/amethyst/tags/%E5%AD%97%E7%AC%A6%E9%9B%86/index.xml" rel="self" type="application/rss+xml"/><item><title>编码、加密、Hash、序列化和字符集</title><link>https://guanpj.github.io/amethyst/Knowledge/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E7%BC%96%E7%A0%81%E5%8A%A0%E5%AF%86Hash%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%AD%97%E7%AC%A6%E9%9B%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guanpj.github.io/amethyst/Knowledge/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E7%BC%96%E7%A0%81%E5%8A%A0%E5%AF%86Hash%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%AD%97%E7%AC%A6%E9%9B%86/</guid><description>加密 # 在密码学中，加密是将明文信息改变为难以读取的密文内容，使之不可读的过程。只有拥有解密方法的对象，经由解密过程，才能将密文还原为正常可读的内容。理想情况下，只有经授权的人员能够读取密文所要传达的信息。加密本身并不能防止信息传输被截取，但加密能防止截取者理解其内容。
对称加密 # 原理 # 通信双方使用同一个密钥，使用加密算法配合上密钥来加密，解密时使用加密过程
的完全逆过程配合密钥来进行解密。
经典算法 # DES(56 位密钥，密钥太短而逐渐被弃用) AES(128 位、192 位、256 位密钥， 现在最流行) 对称加密作用 # 加密通信，防止信息在不安全网络上被截获后，信息被人读取或篡改。
对称加密(如 AES)的破解 # 破解思路
拿到一组或多组原文-密文对 设法找到一个密钥，这个密钥可以将这些原文-密文对中的原文加密为密文，以 及将密文解密为原文的组合，即为成功破解
反破解
一种优秀的对称加密算法的标准是，让破解者找不到比穷举法(暴力破解法)更有
效的破解手段，并且穷举法的破解时间足够⻓(例如数千年)。
对称加密的缺点 # 密钥泄露：不能在不安全网络上传输密钥，一旦密钥泄露则加密通信失败。
非对称加密 # 原理 # 使用公钥对数据进行加密得到密文;使用私钥对数据进行解密得到原数据。
使用非对称加密通信，可以在不可信网络上将双方的公钥传给对方，然后在发消息前分别对消息使用对方的公钥来加密和使用自己的私钥来签名，做到不可信网络上的可靠密钥传播及加密通信。
由于私钥和公钥互相可解，因此非对称加密还可以应用于数字签名技术。通常会对原数据 hash 以后对 hash 签名，然后附加在原数据的后面作为签名。这是 为了让数据更小。
经典算法 # RSA(可用于加密和签名) DSA(仅用于 签名，但速度更快) 非对称加密的优缺点 # 优点：可以在不安全网络上传输密钥。 缺点：计算复杂，因此性能相比对称加密差很多。 非对称加密(如 RSA、ECDSA)的破解 # 破解思路 # 和对称加密不同之处在于，非对称加密的公钥很容易获得，因此制造“原文-密文”对是没有困难的事。所以，非对称加密的关键只在于如何找到一个正确的私钥，可以解密所有经过公钥加密过的密文。找到这样的私钥即为成功破解。由于非对称加密的自身特性，怎样通过公钥来推断出私钥通常是一种思路(例如 RSA)，但往往最佳手段依然是穷举法，只是和对称加密破解的区别在于，对称加密破解是不断尝试自己的新密钥是否可以将自己拿到的“原文-密文”对进行加密和解密，而非对称加密时不断尝试自己的新私钥是否和公钥互相可解。</description></item></channel></rss>